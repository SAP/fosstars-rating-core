---
If a project has a license:
  - advice: >
      No license file could be found in your repository. Be sure to add a license that can be detected by GitHub.
    links:
      - name: Licensing a repository
        url: https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/licensing-a-repository#determining-the-location-of-your-license
If a project uses an allowed license:
  - advice: >
      A license file was detected, but it doesn't seem to be approved by SAP. Under normal circumstances, we use Apache 2.0 exclusively for our open source projects. Of course, exceptions apply and should be covered by this check.
If a license has disallowed text:
  - advice: >
      In earlier times, SAP requested projects to add an API usage section to the LICENSE file. As the LICENSE file should only contain the native license text and the API section has moved to the dep5 file of the REUSE project information, we ask all projects to remove the API section from the LICENSE file.
If a project has a README file:
  - advice: >
      No readme file could be found in your repository. Be sure to add a readme that can be detected by GitHub.
    links:
      - name: About READMEs
        url: https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/about-readmes
If a project has a contributing guideline:
  - advice: >
      No contributing guideline file could be found in your repository. Though it's only a recommendation, we'd like to encourage you to add some information that can be detected by GitHub.
    links:
      - name: Setting guidelines for repository contributors
        url: https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors#adding-a-contributing-file
If a project's contributing guideline has required text:
  - advice: >
      You should add information about the Developer Certificate of Origin (DCO) to the contributions file. Moreover, be sure that there are no longer any references to the outdated contributor license agreement (CLA) in the file.
If a project has enough teams on GitHub:
  - advice: >
      Only one or no team could be found which is assigned. Please make sure to have at least one member and one admin team assigned to the repository. If you need assistance, please contact the OSPO.
If a project has an admin team on GitHub:
  - advice: >
      No team with administrative privileges for the given repository could be found. Please contact the OSPO so that such a team can be created for your repository.
If a project has enough admins on GitHub:
  - advice: >
      An admins team could be found, but it only contains one person or is even empty. If there is a maintainer in the team, please ask this person to add another administrator or contact the OSPO to add the colleagues who are entitled to be admins.
If a project has enough team members on GitHub:
  - advice: >
      A members team could be found, but it only contains one person or is even empty. If there is a maintainer in the team, please ask this person to add additional members or contact the OSPO to add the colleagues who are entitled to be members.
If a project has a team with push privileges:
  - advice: >
      No team with push privileges for the given repository could be found. Please contact the OSPO so that such a team can be created for your repository or ask your admins to perform the task for you.
If vulnerability alerts are enabled for a project on GitHub:
  - advice: >
      Vulnerability alerts are disabled for your repository. An administrator should enable these alerts via Settings. Please see the GitHub documentation for details or contact the OSPO for more information.
    links:
      - name: Managing vulnerabilities in your project's dependencies
        url: https://docs.github.com/en/code-security/supply-chain-security/managing-vulnerabilities-in-your-projects-dependencies
If project's README has info about REUSE:
  - advice: >
      The README of your projects needs to include a link to the results of the REUSE tool scan as well as a licensing section.
If a project has a LICENSES folder with licenses:
  - advice: >
      REUSE tool compliance requires that all used licenses are provided in a LICENSES folder on root level.
If a project is registered in REUSE:
  - advice: >
      A registration for the repository could not be found. Please verify that the repository is registered properly.
    links:
      - name: Register a project in REUSE
        url: https://api.reuse.software/register
If a project is compliant with REUSE rules:
  - advice: >
      The latest REUSE tool compliance check resulted in errors. Please perform the check again on your repository and fix the issues.
If an open-source project has a security policy:
  - advice: >
      Open a pull request to add a security policy for the project.
    links:
      - name: About adding a security policy to a repository on GitHub
        url: https://docs.github.com/en/free-pro-team@latest/github/managing-security-vulnerabilities/adding-a-security-policy-to-your-repository
      - name: An example of a security policy
        url: https://github.com/apache/nifi/blob/main/SECURITY.md
      - name: Suggest a security policy for the project
        url: ${SUGGEST_SECURITY_POLICY_ON_GITHUB}
