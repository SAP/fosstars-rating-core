package com.sap.sgs.phosphor.fosstars.model.value;

import static com.sap.sgs.phosphor.fosstars.model.value.Vulnerability.Builder.newVulnerability;
import static org.junit.Assert.assertEquals;

import com.sap.sgs.phosphor.fosstars.model.value.Vulnerability.Resolution;
import java.util.Collections;
import java.util.Date;
import java.util.Optional;
import org.junit.Test;

public class VulnerabilityTest {

  @Test(expected = IllegalArgumentException.class)
  public void testConfusingResolution() {
    new Vulnerability("CVE-1", "test", CVSS.v2(5.0), Collections.emptyList(),
        Resolution.UNPATCHED, new Date(1), new Date(2), new Date(3));
  }

  @Test(expected = IllegalArgumentException.class)
  public void testConfusingIntroducedDate() {
    new Vulnerability("CVE-1", "test", CVSS.v2(5.0), Collections.emptyList(),
        Resolution.UNPATCHED, new Date(2), new Date(1), new Date(3));
  }

  @Test(expected = IllegalArgumentException.class)
  public void testConfusingPublishedDate() {
    new Vulnerability("CVE-1", "test", CVSS.v2(5.0), Collections.emptyList(),
        Resolution.UNPATCHED, new Date(4), new Date(3), new Date(2));
  }

  @Test
  public void testConstructor() {
    Vulnerability vulnerability = newVulnerability("CVE-2019-0001").make();
    assertEquals("CVE-2019-0001", vulnerability.id());
    assertEquals(Optional.empty(), vulnerability.description());
    assertEquals(CVSS.UNKNOWN, vulnerability.cvss());
    assertEquals(Collections.emptyList(), vulnerability.references());
    assertEquals(Resolution.UNKNOWN, vulnerability.resolution());
    assertEquals(Optional.empty(), vulnerability.introduced());
    assertEquals(Optional.empty(), vulnerability.fixed());
  }

}